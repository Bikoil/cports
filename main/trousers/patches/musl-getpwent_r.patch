diff --git a/src/tspi/ps/tspps.c b/src/tspi/ps/tspps.c
index b5e83d0..dd7bea9 100644
--- a/src/tspi/ps/tspps.c
+++ b/src/tspi/ps/tspps.c
@@ -51,7 +51,7 @@
 
 static int user_ps_fd = -1;
 static MUTEX_DECLARE_INIT(user_ps_lock);
-#if (defined (__FreeBSD__) || defined (__OpenBSD__))
+#if !defined(__GLIBC__)
 static MUTEX_DECLARE_INIT(user_ps_path);
 #endif
 static struct flock fl;
@@ -66,7 +66,7 @@ get_user_ps_path(char **file)
 	TSS_RESULT result;
 	char *file_name = NULL, *home_dir = NULL;
 	struct passwd *pwp;
-#if (defined (__linux) || defined (linux) || defined(__GLIBC__))
+#if defined(__GLIBC__)
 	struct passwd pw;
 #endif
 	struct stat stat_buf;
@@ -78,7 +78,7 @@ get_user_ps_path(char **file)
 		*file = strdup(file_name);
 		return (*file) ? TSS_SUCCESS : TSPERR(TSS_E_OUTOFMEMORY);
 	}
-#if (defined (__FreeBSD__) || defined (__OpenBSD__))
+#if !defined(__GLIBC__)
 	MUTEX_LOCK(user_ps_path);
 #endif
 
@@ -96,7 +96,7 @@ get_user_ps_path(char **file)
 #else
 	setpwent();
 	while (1) {
-#if (defined (__linux) || defined (linux) || defined(__GLIBC__))
+#if defined(__GLIBC__)
 		rc = getpwent_r(&pw, buf, PASSWD_BUFSIZE, &pwp);
 		if (rc) {
 			LogDebugFn("USER PS: Error getting path to home directory: getpwent_r: %s",
@@ -105,7 +105,7 @@ get_user_ps_path(char **file)
 			return TSPERR(TSS_E_INTERNAL_ERROR);
 		}
 
-#elif (defined (__FreeBSD__) || defined (__OpenBSD__))
+#elif !defined(__GLIBC__)
 		if ((pwp = getpwent()) == NULL) {
 			LogDebugFn("USER PS: Error getting path to home directory: getpwent: %s",
                                    strerror(rc));
